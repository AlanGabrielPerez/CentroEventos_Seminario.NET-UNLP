@rendermode InteractiveServer
@if (visible)
{
   <div class="dialogo-contenedor">
       <div class="dialogo-contenido">
            @if (!string.IsNullOrEmpty(msj))
            {
                <div class="@claseMensaje">@msj</div>
            }
            <h3>@Mensaje</h3>

            <div class="d-flex justify-content-end">
                <button class="btn btn-secondary me-2" @onclick="Cerrar">Cancelar</button>
                <button class="btn btn-primary" @onclick="CerrarYConfirmar">Guardar</button>
            </div>
       </div>
   </div>
}

@code{
    private bool visible = false;
    private string Mensaje ="";

    private string msj = "";
    private string claseMensaje = "";

    [Parameter]  public EventCallback OnConfirmado{get;set;}

    public void Mostrar(string mensajeConfirmacion)
    {
        Mensaje=mensajeConfirmacion;
        visible=true;
        StateHasChanged();
    }

    void Cerrar()
    {
        visible=false;
    }

    void CerrarYConfirmar()
    {
        try{
            visible=false;
            OnConfirmado.InvokeAsync();
        }catch (Exception ex)
        {
            msj = $"Error: {ex.Message}";
            claseMensaje = "alert alert-danger";
            return;
        }
    }

}