@page "/eventosDisponibles"
@rendermode InteractiveServer
@inject ISesionUsuario sesion
@inject ListarEventosConCupoDisponibleUseCase eventosDisponibles
@inject CrearReservaUseCase solicitarReserva

@if (sesion.UsuarioId == null)
{
    <p>No estás logueado.</p>
}
else
{
    <p>Bienvenido, @sesion.Nombre</p>
}

@if (!string.IsNullOrEmpty(mensaje))
{
    <div class="@claseMensaje">@mensaje</div>
}

<table class="table">
    <thead>
        <tr>
            <th>Nombre</th>
            <th>Fecha </th>
            <th>Duracion </th>
            <th>Cupo disponible</th>
            <th>Solicitar Reserva</th>
            <th>Detalles evento</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var evento in _lista)
        {
            <tr>
                <td>@evento.Nombre</td>
                <td>@evento.FechaHoraInicio</td>
                <td>@evento.DuracionHoras</td>
                <td>@evento.CupoMaximo</td>
                <td>
                    <button class="btn btn-primary" @onclick="()=>Solicitar(evento.Id)">Solicitar</button>
                </td>
                <td>
                    <a href="/detalleEvento/@evento.Id" class="btn btn-info">Ver</a>
                </td>
            </tr>

        }
    </tbody>
</table>



@code {
    private List<EventoDeportivo> _lista = new List<EventoDeportivo>();
    private int? idSesion;

    private Reserva reserva = new Reserva();

    private string mensaje = "";
    private string claseMensaje = "";

    protected override void OnInitialized()
    {
        idSesion = sesion.UsuarioId;
        ActualizarLista();
    }

    void ActualizarLista()
    {
        try
        {
            if (idSesion is null)
                throw new Exception("Sesión no iniciada.");

            _lista = eventosDisponibles.Ejecutar(idSesion.Value).ToList();
        }
        catch (Exception ex)
        {
            mensaje = $"Error al cargar la lista: {ex.Message}";
            claseMensaje = "alert alert-danger";
        }
    }

    void Solicitar(int idEvento){
        try
        {
            reserva.EventoDeportivoId = idEvento;
            reserva.UsuarioId = idSesion!.Value;

            solicitarReserva.Ejecutar(reserva);
            mensaje = "Reserva solicitada.";
            claseMensaje = "alert alert-success";

        }
        catch (Exception ex)
        {
            mensaje = $"Error: {ex.Message}";
            claseMensaje = "alert alert-danger";
        }
    }


}