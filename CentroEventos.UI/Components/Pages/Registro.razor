@page "/registro"
@rendermode InteractiveServer

@using System.ComponentModel.DataAnnotations
@inject CrearUsuarioUseCase crearUsuario

    @if (!string.IsNullOrEmpty(mensaje))
    {
        <div class="@claseMensaje">@mensaje</div>
    }

    <div class="mb-3">
        <label>Email:</label>
        <input @bind="usuario.Email" class="form-control">
    </div>

    <div class="mb-3">
        <label>Contraseña:</label>
        <input @bind="usuario.PasswordHash" type="password" class="form-control" />
    </div>

    <div class="mb-3">
        <label>Nombre:</label>
        <input class="form-control" @bind="usuario.Nombre" />
    </div>

    <div class="mb-3">
        <label>Apellido:</label>
        <input @bind="usuario.Apellido" class="form-control"/>
    </div>

    <div class="mb-3">
        <label>DNI:</label>
        <input  @bind="usuario.DNI" class="form-control"/>
    </div>

    <button class="btn btn-primary" @onclick="Registrar">Registrarse</button>


@code {
    private Usuario usuario = new Usuario();
  
    private string mensaje = "";
    private string claseMensaje = "";

    void Registrar()
    {
        try
        {
            
            crearUsuario.Ejecutar(usuario);

            mensaje = "Registro exitoso. Espera aprobación.";
            claseMensaje = "alert alert-success";

            usuario = new Usuario();
        
        }
        catch (Exception ex)
        {
            mensaje = $"Error: {ex.Message}";
            claseMensaje = "alert alert-danger";
        }
    }
}